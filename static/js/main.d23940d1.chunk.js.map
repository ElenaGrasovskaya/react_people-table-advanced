{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/Sort/Sort.tsx","components/PeopleTable/PeopleTable.tsx","utils/useFilter.tsx","components/PeopleFilters.tsx","pages/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","Navbar","className","role","to","App","HomePage","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PersonLink","person","useSearchParams","searchParams","slug","toString","sex","name","PersonRow","people","motherLink","find","el","motherName","fatherLink","fatherName","useParams","born","died","Sort","type","setSearchParams","useState","click","setClick","onClick","event","preventDefault","params","URLSearchParams","delete","append","get","PeopleTable","filteredPeople","query","centuries","getAll","sort","order","newPeople","normalizedQuery","toLowerCase","filter","includes","length","result","forEach","century","Math","ceil","person1","person2","localeCompare","useFilter","map","SexFilter","All","Male","Female","CenturyFilter","PeopleFilters","Object","keys","set","handleSexChange","placeholder","value","onChange","target","c","href","newCenturies","handlCenturyChange","PeoplePage","setPeople","isLoading","setIsLoading","error","setError","getData","data","useEffect","Root","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d23940d1.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst getLinkClass = ({ isActive }:\n{ isActive: boolean }) => cn('navbar-item',\n\n  { 'has-background-grey-lighter': isActive });\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\r\n\r\nexport const Loader = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import { Person } from './types/Person';\r\n\r\n// eslint-disable-next-line max-len\r\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nfunction wait(delay: number) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n\r\nexport async function getPeople(): Promise<Person[]> {\r\n  // keep this delay for testing purpose\r\n  return wait(500)\r\n    .then(() => fetch(API_URL))\r\n    .then(response => response.json());\r\n}\r\n","import { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n\n    <Link\n      to={`/people/${person.slug}?${searchParams.toString()}`}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  person: Person;\n  people: Person[];\n}\n\nexport const PersonRow: React.FC<Props> = ({ person, people }) => {\n  const motherLink = people.find((el) => el.name === person.motherName);\n  const fatherLink = people.find((el) => el.name === person.fatherName);\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': person.slug === slug })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {/* eslint-disable */}\n        {person.motherName ? (\n          motherLink ? (\n            <PersonLink person={motherLink} />\n          ) : (\n            person.motherName\n          )\n        ) : (\n          '-'\n        )}\n      </td>\n\n      <td>\n        {person.fatherName ? (\n          fatherLink ? (\n            <PersonLink person={fatherLink} />\n          ) : (\n            person.fatherName\n          )\n        ) : (\n          '-'\n        )}\n        {/* eslint-enable */}\n      </td>\n    </tr>\n  );\n};\n","import { Link, useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\n\ninterface Props {\n  type: string;\n}\n\nexport const Sort: React.FC<Props> = ({ type }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [click, setClick] = useState(0);\n\n  const handleOnClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    const params = new URLSearchParams(searchParams);\n\n    if (click === 0) {\n      params.delete('order');\n      params.delete('sort');\n      setClick(1);\n      params.append('sort', type);\n    }\n\n    if (click === 1) {\n      setClick(2);\n      params.append('order', 'desc');\n    }\n\n    if (click === 2) {\n      setClick(0);\n      params.delete('order');\n      params.delete('sort');\n    }\n\n    setSearchParams(params);\n  };\n\n  return (\n    <Link to={`/people?${searchParams.toString()}`} onClick={handleOnClick}>\n      <span className=\"icon\">\n        {(searchParams.get('sort') !== type)\n        && <i className=\"fas fa-sort\" />}\n\n        {(searchParams.get('sort') === type\n        && searchParams.get('order') !== 'desc')\n        && <i className=\"fas fa-sort-up\" />}\n\n        {(searchParams.get('sort') === type\n        && searchParams.get('order') === 'desc')\n        && <i className=\"fas fa-sort-down\" />}\n      </span>\n    </Link>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonRow } from '../PersonRow';\nimport { useFilter } from '../../utils/useFilter';\nimport { Sort } from '../Sort';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const filteredPeople = useFilter(people);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            Name\n            <Sort type=\"name\" />\n\n          </th>\n          <th>\n            Sex\n            <Sort type=\"sex\" />\n          </th>\n          <th>\n            Born\n            <Sort type=\"born\" />\n          </th>\n          <th>\n            Died\n            <Sort type=\"died\" />\n          </th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      {filteredPeople.length === 0 ? (\n        <p>There are no people matching the current search criteria</p>\n      ) : (\n        <tbody>\n          {filteredPeople.map((person) => (\n            <PersonRow person={person} people={filteredPeople} />\n          ))}\n        </tbody>\n      )}\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\nexport const useFilter = (people: Person[]) => {\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  let newPeople = [...people];\n\n  if (query) {\n    const normalizedQuery = query.toLowerCase();\n\n    newPeople = newPeople\n      .filter((person) => person.name.toLowerCase().includes(normalizedQuery));\n  }\n\n  if (sex) {\n    newPeople = newPeople.filter((person) => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    let result: Person[] = [];\n\n    centuries.forEach((century) => {\n      result = [\n        ...result,\n        ...newPeople.filter(\n          (person) => Math.ceil(person.born / 100) === +century,\n        ),\n      ];\n    });\n    newPeople = result;\n  }\n\n  if (sort) {\n    newPeople = newPeople.sort((person1, person2) => {\n      switch (sort) {\n        case 'born':\n          if (order === 'desc') {\n            return person2.born - person1.born;\n          }\n\n          return person1.born - person2.born;\n\n        case 'died':\n          if (order === 'desc') {\n            return person2.died - person1.died;\n          }\n\n          return person1.died - person2.died;\n        case 'name':\n          if (order === 'desc') {\n            return person2.name.localeCompare(person1.name);\n          }\n\n          return person1.name.localeCompare(person2.name);\n        case 'sex':\n          if (order === 'desc') {\n            return person2.sex.localeCompare(person1.sex);\n          }\n\n          return person1.sex.localeCompare(person2.sex);\n        default:\n          return 1;\n      }\n    });\n  }\n\n  return newPeople;\n};\n","import { useSearchParams, Link } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst SexFilter:{ [key:string]:string } = {\n  All: '',\n  Male: 'm',\n  Female: 'f',\n};\n\nconst CenturyFilter = [16, 17, 18, 19, 20];\n\nexport const PeopleFilters = () => {\n  // const [centuries, setCenturies] = useState<CenturyFilter[]>([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n\n  const handleSexChange = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n    type: string,\n  ) => {\n    event.preventDefault();\n    const params = new URLSearchParams(searchParams);\n\n    if (type === 'All') {\n      params.delete('sex');\n    } else {\n      params.set('sex', SexFilter[type]);\n    }\n\n    setSearchParams(params);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    params.set('query', event.target.value);\n\n    setSearchParams(params);\n  };\n\n  const handlCenturyChange = (event:React.MouseEvent<HTMLAnchorElement>,\n    century:number) => {\n    event.preventDefault();\n    const params = new URLSearchParams(searchParams);\n\n    const newCenturies = centuries.includes(century.toString())\n      ? centuries.filter(c => +c !== century)\n      : [...centuries, century];\n\n    params.delete('centuries');\n\n    newCenturies.forEach(el => {\n      params.append('centuries', el.toString());\n    });\n    setSearchParams(params);\n  };\n\n  const handleClearCenturies = () => {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('centuries');\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {Object.keys(SexFilter).map((type) => (\n          <Link\n            className={cn({\n              'is-active': sex === SexFilter[type],\n            })}\n            to=\"#/people\"\n            onClick={(event) => handleSexChange(event, type)}\n            key={type}\n          >\n            {type}\n          </Link>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n\n            {CenturyFilter.map(century => (\n              <a\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': centuries.find(c => +c === century),\n                })}\n                href=\"#/people\"\n                onClick={(event) => handlCenturyChange(event, century)}\n                key={century}\n              >\n                {century}\n              </a>\n            ))}\n\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <a\n              data-cy=\"centuryALL\"\n              className={cn('button is-success', {\n                'is-outlined': centuries.length !== 0,\n              })}\n              href=\"#/people\"\n              onClick={handleClearCenturies}\n            >\n              All\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a className=\"button is-link is-outlined is-fullwidth\" href=\"#/people\">\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../components/Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { PeopleFilters } from '../components/PeopleFilters';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const getData = async () => {\n    setIsLoading(true);\n    try {\n      const data = await getPeople();\n\n      setPeople(data);\n    } catch {\n      setError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n          {/* eslint-disable */}\n          {isLoading ? (\n            <Loader />\n          ) : people.length === 0 ? (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          ) : (\n            <PeopleTable people={people} />\n          )}\n          {/* eslint-enable */}\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace={false} />} />\n        <Route path=\"/people\" element={<PeoplePage />} />\n        <Route path=\"/people/:slug\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}